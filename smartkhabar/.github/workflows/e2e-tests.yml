name: End-to-End Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
        
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps ${{ matrix.browser }}
      
    - name: Create test environment file
      run: |
        cat > .env.local << EOF
        SUPABASE_URL=https://test.supabase.co
        SUPABASE_ANON_KEY=test-anon-key
        NEWS_API_KEY=test-news-api-key
        OPENAI_API_KEY=test-openai-key
        FIRECRAWL_API_KEY=test-firecrawl-key
        GNEWS_API_KEY=test-gnews-key
        NEON_DATABASE_URL=postgresql://test:test@localhost:5432/test
        EOF
        
    - name: Build application
      run: npm run build
      
    - name: Run Playwright tests
      run: npx playwright test --project=${{ matrix.browser }}
      env:
        CI: true
        
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.browser }}
        path: playwright-report/
        retention-days: 30

  mobile-test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps chromium
      
    - name: Create test environment file
      run: |
        cat > .env.local << EOF
        SUPABASE_URL=https://test.supabase.co
        SUPABASE_ANON_KEY=test-anon-key
        NEWS_API_KEY=test-news-api-key
        OPENAI_API_KEY=test-openai-key
        FIRECRAWL_API_KEY=test-firecrawl-key
        GNEWS_API_KEY=test-gnews-key
        NEON_DATABASE_URL=postgresql://test:test@localhost:5432/test
        EOF
        
    - name: Build application
      run: npm run build
      
    - name: Run Mobile Playwright tests
      run: npx playwright test --project="Mobile Chrome" --project="Mobile Safari"
      env:
        CI: true
        
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-mobile
        path: playwright-report/
        retention-days: 30

  accessibility-test:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Install Playwright and axe
      run: |
        npx playwright install --with-deps chromium
        npm install --save-dev @axe-core/playwright
        
    - name: Create test environment file
      run: |
        cat > .env.local << EOF
        SUPABASE_URL=https://test.supabase.co
        SUPABASE_ANON_KEY=test-anon-key
        NEWS_API_KEY=test-news-api-key
        OPENAI_API_KEY=test-openai-key
        FIRECRAWL_API_KEY=test-firecrawl-key
        GNEWS_API_KEY=test-gnews-key
        NEON_DATABASE_URL=postgresql://test:test@localhost:5432/test
        EOF
        
    - name: Build application
      run: npm run build
      
    - name: Run accessibility tests
      run: npx playwright test e2e/accessibility.spec.ts
      env:
        CI: true
        
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: accessibility-report
        path: playwright-report/
        retention-days: 30

  performance-test:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Install Playwright
      run: npx playwright install --with-deps chromium
      
    - name: Create test environment file
      run: |
        cat > .env.local << EOF
        SUPABASE_URL=https://test.supabase.co
        SUPABASE_ANON_KEY=test-anon-key
        NEWS_API_KEY=test-news-api-key
        OPENAI_API_KEY=test-openai-key
        FIRECRAWL_API_KEY=test-firecrawl-key
        GNEWS_API_KEY=test-gnews-key
        NEON_DATABASE_URL=postgresql://test:test@localhost:5432/test
        EOF
        
    - name: Build application
      run: npm run build
      
    - name: Run performance tests
      run: npx playwright test e2e/performance.spec.ts
      env:
        CI: true
        
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-report
        path: playwright-report/
        retention-days: 30

  visual-regression:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Install Playwright
      run: npx playwright install --with-deps chromium
      
    - name: Create test environment file
      run: |
        cat > .env.local << EOF
        SUPABASE_URL=https://test.supabase.co
        SUPABASE_ANON_KEY=test-anon-key
        NEWS_API_KEY=test-news-api-key
        OPENAI_API_KEY=test-openai-key
        FIRECRAWL_API_KEY=test-firecrawl-key
        GNEWS_API_KEY=test-gnews-key
        NEON_DATABASE_URL=postgresql://test:test@localhost:5432/test
        EOF
        
    - name: Build application
      run: npm run build
      
    - name: Run visual regression tests
      run: npx playwright test e2e/visual-regression.spec.ts
      env:
        CI: true
        
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: visual-regression-report
        path: playwright-report/
        retention-days: 30